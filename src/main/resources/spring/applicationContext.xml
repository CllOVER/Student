<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/cache
       http://www.springframework.org/schema/cache/spring-cache.xsd
        ">

        <!--spring 配置文件-->
        <!--<cache:annotation-driven cache-manager="cacheManager"/>-->
        <!-- 加载配置文件 -->
        <context:property-placeholder
                location="classpath:properties/db.properties"></context:property-placeholder>

        <!-- 扫描包 -->
        <context:component-scan
                base-package="cn.cllover.administration">
                <!-- 不扫描springmvc的控制器，除此外 -->
                <context:exclude-filter type="annotation"
                                        expression="org.springframework.stereotype.Controller" />
        </context:component-scan>

        <!--数据库配置-->
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
                <property name="driverClassName" value="${db.driverClassName}"></property>
                <property name="url" value="${db.url}"></property>
                <property name="username" value="${db.username}"></property>
                <property name="password" value="${db.password}"></property>
        </bean>

        <!-- mybatis全局配置 -->
        <bean id="SqlSessionFactory"
              class="org.mybatis.spring.SqlSessionFactoryBean">
                <!-- 注入数据源 -->
                <property name="dataSource" ref="dataSource"></property>
                <!-- 指定全局配置文件所在位置 -->
                <property name="configLocation"
                          value="classpath:mybatis/mybatis.xml"></property>
                <!-- 制定mapper等文件所在位置 -->
                <property name="mapperLocations"
                          value="classpath:mapper/*.xml"></property>
        </bean>

        <!-- 配置接口扫描器，与mybatis的实现有关 -->
        <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
                <property name="basePackage" value="cn.cllover.administration.dao"></property>
        </bean>

        <!-- 配置事务控制 -->
        <bean id="transactionManager"
              class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
                <property name="dataSource" ref="dataSource"></property>
        </bean>


        <!-- 开启基于注解的事务（使用xml配置事务） -->
        <aop:config>
                <!-- 配置切入点表达式 -->
                <aop:pointcut
                        expression="execution(* cn.cllover.administration.service..*())" id="txpointcut" />
                <!-- 配置事务增强 -->
                <aop:advisor advice-ref="txadvice"
                             pointcut-ref="txpointcut" />
        </aop:config>

        <!-- 配置事务增加，如何切入 拦截哪些方法（切入点表达式，拦截上面的事务增强） -->
        <tx:advice id="txadvice">
                <tx:attributes>
                        <!-- 所有方法都添加事务 -->
                        <tx:method name="*" />
                        <!-- 以get开始的方法添加事务 -->
                        <tx:method name="get*" read-only="true" />
                </tx:attributes>
        </tx:advice>

      <!--  <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
                <property name="cacheManager" ref="ehcache"></property>
        </bean>

        <bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
                <property name="configLocation" value="classpath:ehcache-setting.xml"></property>
        </bean>-->
</beans>