<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cllover.administration.dao.StudentsMapper">
  <resultMap id="BaseResultMap" type="cn.cllover.administration.pojo.Students">
    <id column="stu_id" jdbcType="BIGINT" property="stuId" />
    <result column="stu_name" jdbcType="VARCHAR" property="stuName" />
    <result column="stu_sex" jdbcType="VARCHAR" property="stuSex" />
    <result column="stu_age" jdbcType="INTEGER" property="stuAge" />
    <result column="stu_phone" jdbcType="BIGINT" property="stuPhone" />
    <result column="stu_home" jdbcType="VARCHAR" property="stuHome" />
    <result column="stu_address" jdbcType="VARCHAR" property="stuAddress" />
    <result column="stu_birthday" jdbcType="DATE" property="stuBirthday" />
    <result column="stu_identity" jdbcType="BIGINT" property="stuIdentity" />
    <result column="stu_nation_id" jdbcType="INTEGER" property="stuNationId" />
    <result column="stu_email" jdbcType="VARCHAR" property="stuEmail" />
    <result column="stu_qq" jdbcType="BIGINT" property="stuQq" />
    <result column="stu_league_member" jdbcType="VARCHAR" property="stuLeagueMember" />
    <result column="stu_party_member" jdbcType="VARCHAR" property="stuPartyMember" />
  </resultMap>
  <resultMap id="WithNationResultMap" type="cn.cllover.administration.pojo.Students">
    <id column="stu_id" jdbcType="BIGINT" property="stuId" />
    <result column="stu_name" jdbcType="VARCHAR" property="stuName" />
    <result column="stu_sex" jdbcType="VARCHAR" property="stuSex" />
    <result column="stu_age" jdbcType="INTEGER" property="stuAge" />
    <result column="stu_phone" jdbcType="BIGINT" property="stuPhone" />
    <result column="stu_home" jdbcType="VARCHAR" property="stuHome" />
    <result column="stu_address" jdbcType="VARCHAR" property="stuAddress" />
    <result column="stu_birthday" jdbcType="DATE" property="stuBirthday" />
    <result column="stu_identity" jdbcType="BIGINT" property="stuIdentity" />
    <result column="stu_nation_id" jdbcType="INTEGER" property="stuNationId" />
    <result column="stu_email" jdbcType="VARCHAR" property="stuEmail" />
    <result column="stu_qq" jdbcType="BIGINT" property="stuQq" />
    <result column="stu_league_member" jdbcType="VARCHAR" property="stuLeagueMember" />
    <result column="stu_party_member" jdbcType="VARCHAR" property="stuPartyMember" />
    <!-- 指定联合查询出的部门字段的封装 -->
    <association property="nation" javaType="cn.cllover.administration.pojo.Nation">
      <id column="nation_id" property="nationId"></id>
      <result column="nation_name" property="nationName"></result>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    stu_id, stu_name, stu_sex, stu_age, stu_phone, stu_home, stu_address, stu_birthday,
    stu_identity, stu_nation_id, stu_email, stu_qq, stu_league_member, stu_party_member
  </sql>
  <!--联合-->
  <sql id="WithNation_Column_List">
    stu.stu_id,stu.stu_name,stu.stu_sex,stu.stu_age,stu.stu_phone,stu.stu_home,stu.stu_address,stu.stu_birthday,
    stu.stu_identity,stu.stu_nation_id,stu.stu_email,stu.stu_qq,stu.stu_league_member,stu.stu_party_member,na.nation_id,na.nation_name
  </sql>
  <select id="selectByWithNationExample" parameterType="cn.cllover.administration.pojo.StudentsExample" resultMap="WithNationResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="WithNation_Column_List" />
    FROM students stu
    left join nation na on stu.stu_nation_id = na.nation_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

    <select id="getByStuName" parameterType="cn.cllover.administration.pojo.Students" resultMap="WithNationResultMap">
        SELECT * FROM students left join nation on stu_nation_id = nation_id WHERE stu_name LIKE "%"#{stuName}"%"
  </select>

  <select id="selectByWithNationPrimaryKey" parameterType="java.lang.Long" resultMap="WithNationResultMap">
    select
    <include refid="WithNation_Column_List" />
    FROM students stu
    left join nation na on stu.stu_nation_id = na.nation_id
    where stu_id = #{stuId,jdbcType=BIGINT}
  </select>
  <select id="selectByExample" parameterType="cn.cllover.administration.pojo.StudentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from students
    where stu_id = #{stuId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from students
    where stu_id = #{stuId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.cllover.administration.pojo.StudentsExample">
    delete from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <!--用的这个-->
  <insert id="insert" parameterType="cn.cllover.administration.pojo.Students" >
    insert into students (stu_id, stu_name,stu_sex,
      stu_age, stu_phone, stu_home,
      stu_address, stu_birthday, stu_identity,
      stu_nation_id, stu_email, stu_qq,
      stu_league_member, stu_party_member)
    values (#{stuId,jdbcType=BIGINT}, #{stuName,jdbcType=VARCHAR}, #{stuSex,jdbcType=VARCHAR},
      #{stuAge,jdbcType=INTEGER}, #{stuPhone,jdbcType=BIGINT}, #{stuHome,jdbcType=VARCHAR},
      #{stuAddress,jdbcType=VARCHAR}, #{stuBirthday,jdbcType=DATE}, #{stuIdentity,jdbcType=BIGINT},
      #{stuNationId,jdbcType=INTEGER}, #{stuEmail,jdbcType=VARCHAR}, #{stuQq,jdbcType=BIGINT}, 
      #{stuLeagueMember,jdbcType=VARCHAR}, #{stuPartyMember,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.cllover.administration.pojo.Students">
    insert into students
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        stu_id,
      </if>
      <if test="stuName != null">
        stu_name,
      </if>
      <if test="stuSex != null">
        stu_sex,
      </if>
      <if test="stuAge != null">
        stu_age,
      </if>
      <if test="stuPhone != null">
        stu_phone,
      </if>
      <if test="stuHome != null">
        stu_home,
      </if>
      <if test="stuAddress != null">
        stu_address,
      </if>
      <if test="stuBirthday != null">
        stu_birthday,
      </if>
      <if test="stuIdentity != null">
        stu_identity,
      </if>
      <if test="stuNationId != null">
        stu_nation_id,
      </if>
      <if test="stuEmail != null">
        stu_email,
      </if>
      <if test="stuQq != null">
        stu_qq,
      </if>
      <if test="stuLeagueMember != null">
        stu_league_member,
      </if>
      <if test="stuPartyMember != null">
        stu_party_member,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="stuId != null">
        #{stuId,jdbcType=BIGINT},
      </if>
      <if test="stuName != null">
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuSex != null">
        #{stuSex,jdbcType=VARCHAR},
      </if>
      <if test="stuAge != null">
        #{stuAge,jdbcType=INTEGER},
      </if>
      <if test="stuPhone != null">
        #{stuPhone,jdbcType=BIGINT},
      </if>
      <if test="stuHome != null">
        #{stuHome,jdbcType=VARCHAR},
      </if>
      <if test="stuAddress != null">
        #{stuAddress,jdbcType=VARCHAR},
      </if>
      <if test="stuBirthday != null">
        #{stuBirthday,jdbcType=DATE},
      </if>
      <if test="stuIdentity != null">
        #{stuIdentity,jdbcType=BIGINT},
      </if>
      <if test="stuNationId != null">
        #{stuNationId,jdbcType=INTEGER},
      </if>
      <if test="stuEmail != null">
        #{stuEmail,jdbcType=VARCHAR},
      </if>
      <if test="stuQq != null">
        #{stuQq,jdbcType=BIGINT},
      </if>
      <if test="stuLeagueMember != null">
        #{stuLeagueMember,jdbcType=VARCHAR},
      </if>
      <if test="stuPartyMember != null">
        #{stuPartyMember,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.cllover.administration.pojo.StudentsExample" resultType="java.lang.Long">
    select count(*) from students
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update students
    <set>
      <if test="record.stuId != null">
        stu_id = #{record.stuId,jdbcType=BIGINT},
      </if>
      <if test="record.stuName != null">
        stu_name = #{record.stuName,jdbcType=VARCHAR},
      </if>
      <if test="record.stuSex != null">
        stu_sex = #{record.stuSex,jdbcType=VARCHAR},
      </if>
      <if test="record.stuAge != null">
        stu_age = #{record.stuAge,jdbcType=INTEGER},
      </if>
      <if test="record.stuPhone != null">
        stu_phone = #{record.stuPhone,jdbcType=BIGINT},
      </if>
      <if test="record.stuHome != null">
        stu_home = #{record.stuHome,jdbcType=VARCHAR},
      </if>
      <if test="record.stuAddress != null">
        stu_address = #{record.stuAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.stuBirthday != null">
        stu_birthday = #{record.stuBirthday,jdbcType=DATE},
      </if>
      <if test="record.stuIdentity != null">
        stu_identity = #{record.stuIdentity,jdbcType=BIGINT},
      </if>
      <if test="record.stuNationId != null">
        stu_nation_id = #{record.stuNationId,jdbcType=INTEGER},
      </if>
      <if test="record.stuEmail != null">
        stu_email = #{record.stuEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.stuQq != null">
        stu_qq = #{record.stuQq,jdbcType=BIGINT},
      </if>
      <if test="record.stuLeagueMember != null">
        stu_league_member = #{record.stuLeagueMember,jdbcType=VARCHAR},
      </if>
      <if test="record.stuPartyMember != null">
        stu_party_member = #{record.stuPartyMember,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update students
    set stu_id = #{record.stuId,jdbcType=BIGINT},
    stu_name = #{record.stuName,jdbcType=VARCHAR},
    stu_sex = #{record.stuSex,jdbcType=VARCHAR},
    stu_age = #{record.stuAge,jdbcType=INTEGER},
    stu_phone = #{record.stuPhone,jdbcType=BIGINT},
    stu_home = #{record.stuHome,jdbcType=VARCHAR},
    stu_address = #{record.stuAddress,jdbcType=VARCHAR},
    stu_birthday = #{record.stuBirthday,jdbcType=DATE},
    stu_identity = #{record.stuIdentity,jdbcType=BIGINT},
    stu_nation_id = #{record.stuNationId,jdbcType=INTEGER},
    stu_email = #{record.stuEmail,jdbcType=VARCHAR},
    stu_qq = #{record.stuQq,jdbcType=BIGINT},
    stu_league_member = #{record.stuLeagueMember,jdbcType=VARCHAR},
    stu_party_member = #{record.stuPartyMember,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.cllover.administration.pojo.Students">
    update students
    <set>
      <if test="stuName != null">
        stu_name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuSex != null">
        stu_sex = #{stuSex,jdbcType=VARCHAR},
      </if>
      <if test="stuAge != null">
        stu_age = #{stuAge,jdbcType=INTEGER},
      </if>
      <if test="stuPhone != null">
        stu_phone = #{stuPhone,jdbcType=BIGINT},
      </if>
      <if test="stuHome != null">
        stu_home = #{stuHome,jdbcType=VARCHAR},
      </if>
      <if test="stuAddress != null">
        stu_address = #{stuAddress,jdbcType=VARCHAR},
      </if>
      <if test="stuBirthday != null">
        stu_birthday = #{stuBirthday,jdbcType=DATE},
      </if>
      <if test="stuIdentity != null">
        stu_identity = #{stuIdentity,jdbcType=BIGINT},
      </if>
      <if test="stuNationId != null">
        stu_nation_id = #{stuNationId,jdbcType=INTEGER},
      </if>
      <if test="stuEmail != null">
        stu_email = #{stuEmail,jdbcType=VARCHAR},
      </if>
      <if test="stuQq != null">
        stu_qq = #{stuQq,jdbcType=BIGINT},
      </if>
      <if test="stuLeagueMember != null">
        stu_league_member = #{stuLeagueMember,jdbcType=VARCHAR},
      </if>
      <if test="stuPartyMember != null">
        stu_party_member = #{stuPartyMember,jdbcType=VARCHAR},
      </if>
    </set>
    where stu_id = #{stuId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.cllover.administration.pojo.Students">
    update students
    set stu_name = #{stuName,jdbcType=VARCHAR},
      stu_sex = #{stuSex,jdbcType=VARCHAR},
      stu_age = #{stuAge,jdbcType=INTEGER},
      stu_phone = #{stuPhone,jdbcType=BIGINT},
      stu_home = #{stuHome,jdbcType=VARCHAR},
      stu_address = #{stuAddress,jdbcType=VARCHAR},
      stu_birthday = #{stuBirthday,jdbcType=DATE},
      stu_identity = #{stuIdentity,jdbcType=BIGINT},
      stu_nation_id = #{stuNationId,jdbcType=INTEGER},
      stu_email = #{stuEmail,jdbcType=VARCHAR},
      stu_qq = #{stuQq,jdbcType=BIGINT},
      stu_league_member = #{stuLeagueMember,jdbcType=VARCHAR},
      stu_party_member = #{stuPartyMember,jdbcType=VARCHAR}
    where stu_id = #{stuId,jdbcType=BIGINT}
  </update>



</mapper>